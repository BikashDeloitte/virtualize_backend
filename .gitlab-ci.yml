stages:
  - build
  - deploy
  
build:
  image: maven:3.6.3-openjdk-11
  stage: build
  only:
  - master
  tags:
  - virtualize_backend
  script:
    - export DATABASE_NAME=$DATABASE_NAME
    - export DATABASE_USER=$DATABASE_USER
    - export DATABASE_PASSWORD=$DATABASE_PASSWORD
    - export DATABASE_HOST=$DATABASE_HOST
    - export DATABASE_PORT=$DATABASE_PORT
    - mvn clean test package -B
  artifacts:
    paths:
      - target/
  when: manual
deploy_job:
  image: google/cloud-sdk:alpine
  stage: deploy
  only:
  - master
  tags:
  - virtualize_backend
  dependencies: 
    - build
  before_script:
  - "ServiceName=virtbackend"
  - "echo $ServiceName"
  - |
    cat <<EOF >> app.yaml
    runtime: java11
    env_variables:
      DATABASE_NAME: "$DATABASE_NAME"
      DATABASE_USER: "$DATABASE_USER"
      DATABASE_PASSWORD: "$DATABASE_PASSWORD"
      DATABASE_HOST: "$DATABASE_HOST"
      DATABASE_PORT: "$DATABASE_PORT"
    manual_scaling:
      instances: 1
    liveness_check:
      path: "/"
    readiness_check:
      path: "/"
    service: $ServiceName
    EOF
  - cat app.yaml
  - echo $GCP_SERVICE_CRED > ${CI_PIPELINE_ID}.json

  script:
  - gcloud auth activate-service-account --key-file $CI_PIPELINE_ID.json
  - gcloud --project hu18-groupa-java app deploy  --appyaml app.yaml --version v1
  - url=$(gcloud app services browse $ServiceName --no-launch-browser --project hu18-groupa-java)
  - echo $url
  after_script:
  - rm $CI_PIPELINE_ID.json
  when: manual
